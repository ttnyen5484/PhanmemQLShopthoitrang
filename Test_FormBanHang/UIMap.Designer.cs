// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Test_FormBanHang
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod_BanHang - Use 'RecordedMethod_BanHangParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_BanHang()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIBanHangGUIWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIBanHangGUIWindow.UIItemWindow1.UIItemEdit;
            WinButton uITHÊMButton = this.UIBanHangGUIWindow.UITHÊMWindow.UITHÊMButton;
            WinButton uIOKButton = this.UIMessageBoxThanhCongWindow.UIOKWindow.UIOKButton;
            WinEdit uIItemEdit2 = this.UIBanHangGUIWindow.UIItemWindow2.UIItemEdit;
            WinButton uITHANHTOÁNButton = this.UIBanHangGUIWindow.UITHANHTOÁNWindow.UITHANHTOÁNButton;
            #endregion

            // Type 'SPNA05' in text box
            uIItemEdit.Text = this.RecordedMethod_BanHangParams.UIItemEditText;

            // Type '1' in text box
            uIItemEdit1.Text = this.RecordedMethod_BanHangParams.UIItemEditText1;

            // Click 'THÊM' button
            Mouse.Click(uITHÊMButton, new Point(87, 46));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(71, 19));

            // Type '300000' in text box
            uIItemEdit2.Text = this.RecordedMethod_BanHangParams.UIItemEditText2;

            // Click 'THANH TOÁN' button
            Mouse.Click(uITHANHTOÁNButton, new Point(154, 49));
        }
        
        /// <summary>
        /// AssertMethod_ThanhCong - Use 'AssertMethod_ThanhCongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_ThanhCong()
        {
            #region Variable Declarations
            WinText uIThêmthànhcôngText = this.UIMessageBoxThanhCongWindow.UIThêmthànhcôngWindow.UIThêmthànhcôngText;
            #endregion

            // Verify that the 'Name' property of 'Thêm thành công.' label equals 'Thêm thành công.'
            Assert.AreEqual(this.AssertMethod_ThanhCongExpectedValues.UIThêmthànhcôngTextName, uIThêmthànhcôngText.Name);
        }
        
        /// <summary>
        /// AssertMethod_NullSL - Use 'AssertMethod_NullSLExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_NullSL()
        {
            #region Variable Declarations
            WinText uIMờibạnnhậpdữliệuText = this.UIMessageBoxCustomWindow.UIMờibạnnhậpdữliệuWindow.UIMờibạnnhậpdữliệuText;
            #endregion

            // Verify that the 'Name' property of 'Mời bạn nhập dữ liệu.' label equals 'Mời bạn nhập dữ liệu.'
            Assert.AreEqual(this.AssertMethod_NullSLExpectedValues.UIMờibạnnhậpdữliệuTextName, uIMờibạnnhậpdữliệuText.Name);
        }
        
        /// <summary>
        /// RecordedMethod_NullTT - Use 'RecordedMethod_NullTTParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_NullTT()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIBanHangGUIWindow.UIItemWindow.UIItemEdit;
            WinEdit uIItemEdit1 = this.UIBanHangGUIWindow.UIItemWindow1.UIItemEdit;
            WinButton uITHÊMButton = this.UIBanHangGUIWindow.UITHÊMWindow.UITHÊMButton;
            #endregion

            // Type 'SPNA03' in text box
            uIItemEdit.Text = this.RecordedMethod_NullTTParams.UIItemEditText;

            // Type '2' in text box
            uIItemEdit1.Text = this.RecordedMethod_NullTTParams.UIItemEditText1;

            // Click 'THÊM' button
            Mouse.Click(uITHÊMButton, new Point(86, 31));
        }
        
        /// <summary>
        /// AssertMethod_NullTT - Use 'AssertMethod_NullTTExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_NullTT()
        {
            #region Variable Declarations
            WinText uIMờibạnnhậpdữliệuText = this.UIMessageBoxCustomWindow.UIMờibạnnhậpdữliệuWindow.UIMờibạnnhậpdữliệuText;
            #endregion

            // Verify that the 'Name' property of 'Mời bạn nhập dữ liệu.' label equals 'Mời bạn nhập dữ liệu.'
            Assert.AreEqual(this.AssertMethod_NullTTExpectedValues.UIMờibạnnhậpdữliệuTextName, uIMờibạnnhậpdữliệuText.Name);
        }
        
        /// <summary>
        /// AssertMethod_NullTienDua - Use 'AssertMethod_NullTienDuaExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_NullTienDua()
        {
            #region Variable Declarations
            WinText uIBạnchưanhậpsốtiềnkháText = this.UIMessageBoxCustomWindow.UIMờibạnnhậpdữliệuWindow.UIBạnchưanhậpsốtiềnkháText;
            #endregion

            // Verify that the 'Name' property of 'Bạn chưa nhập số tiền khách hàng đưa.' label equals 'Bạn chưa nhập số tiền khách hàng đưa.'
            Assert.AreEqual(this.AssertMethod_NullTienDuaExpectedValues.UIBạnchưanhậpsốtiềnkháTextName, uIBạnchưanhậpsốtiềnkháText.Name);
        }
        
        /// <summary>
        /// RecordedMethod1 - Use 'RecordedMethod1Params' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod1()
        {
            #region Variable Declarations
            WinEdit uIItemEdit = this.UIBanHangGUIWindow.UIItemWindow.UIItemEdit;
            WinClient uITxtslClient = this.UIBanHangGUIWindow.UITxtslWindow.UITxtslClient;
            WinEdit uIItemEdit1 = this.UIBanHangGUIWindow.UIItemWindow1.UIItemEdit;
            WinButton uITHÊMButton = this.UIBanHangGUIWindow.UITHÊMWindow.UITHÊMButton;
            WinButton uIOKButton = this.UIMessageBoxThanhCongWindow.UIOKWindow.UIOKButton;
            WinEdit uIItemEdit2 = this.UIBanHangGUIWindow.UIItemWindow2.UIItemEdit;
            WinButton uITHANHTOÁNButton = this.UIBanHangGUIWindow.UITHANHTOÁNWindow.UITHANHTOÁNButton;
            #endregion

            // Type 'SPNA05' in text box
            uIItemEdit.Text = this.RecordedMethod1Params.UIItemEditText;

            // Click 'txtsl' client
            Mouse.Click(uITxtslClient, new Point(113, 1));

            // Type '2' in text box
            uIItemEdit1.Text = this.RecordedMethod1Params.UIItemEditText1;

            // Type '{CapsLock}' in text box
            Keyboard.SendKeys(uIItemEdit1, this.RecordedMethod1Params.UIItemEditSendKeys, ModifierKeys.None);

            // Click 'THÊM' button
            Mouse.Click(uITHÊMButton, new Point(69, 39));

            // Click 'OK' button
            Mouse.Click(uIOKButton, new Point(57, 21));

            // Type '600000' in text box
            uIItemEdit2.Text = this.RecordedMethod1Params.UIItemEditText2;

            // Click 'THANH TOÁN' button
            Mouse.Click(uITHANHTOÁNButton, new Point(148, 69));
        }
        
        #region Properties
        public virtual RecordedMethod_BanHangParams RecordedMethod_BanHangParams
        {
            get
            {
                if ((this.mRecordedMethod_BanHangParams == null))
                {
                    this.mRecordedMethod_BanHangParams = new RecordedMethod_BanHangParams();
                }
                return this.mRecordedMethod_BanHangParams;
            }
        }
        
        public virtual AssertMethod_ThanhCongExpectedValues AssertMethod_ThanhCongExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_ThanhCongExpectedValues == null))
                {
                    this.mAssertMethod_ThanhCongExpectedValues = new AssertMethod_ThanhCongExpectedValues();
                }
                return this.mAssertMethod_ThanhCongExpectedValues;
            }
        }
        
        public virtual AssertMethod_NullSLExpectedValues AssertMethod_NullSLExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_NullSLExpectedValues == null))
                {
                    this.mAssertMethod_NullSLExpectedValues = new AssertMethod_NullSLExpectedValues();
                }
                return this.mAssertMethod_NullSLExpectedValues;
            }
        }
        
        public virtual RecordedMethod_NullTTParams RecordedMethod_NullTTParams
        {
            get
            {
                if ((this.mRecordedMethod_NullTTParams == null))
                {
                    this.mRecordedMethod_NullTTParams = new RecordedMethod_NullTTParams();
                }
                return this.mRecordedMethod_NullTTParams;
            }
        }
        
        public virtual AssertMethod_NullTTExpectedValues AssertMethod_NullTTExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_NullTTExpectedValues == null))
                {
                    this.mAssertMethod_NullTTExpectedValues = new AssertMethod_NullTTExpectedValues();
                }
                return this.mAssertMethod_NullTTExpectedValues;
            }
        }
        
        public virtual AssertMethod_NullTienDuaExpectedValues AssertMethod_NullTienDuaExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_NullTienDuaExpectedValues == null))
                {
                    this.mAssertMethod_NullTienDuaExpectedValues = new AssertMethod_NullTienDuaExpectedValues();
                }
                return this.mAssertMethod_NullTienDuaExpectedValues;
            }
        }
        
        public virtual RecordedMethod1Params RecordedMethod1Params
        {
            get
            {
                if ((this.mRecordedMethod1Params == null))
                {
                    this.mRecordedMethod1Params = new RecordedMethod1Params();
                }
                return this.mRecordedMethod1Params;
            }
        }
        
        public UIBanHangGUIWindow UIBanHangGUIWindow
        {
            get
            {
                if ((this.mUIBanHangGUIWindow == null))
                {
                    this.mUIBanHangGUIWindow = new UIBanHangGUIWindow();
                }
                return this.mUIBanHangGUIWindow;
            }
        }
        
        public UIMessageBoxThanhCongWindow UIMessageBoxThanhCongWindow
        {
            get
            {
                if ((this.mUIMessageBoxThanhCongWindow == null))
                {
                    this.mUIMessageBoxThanhCongWindow = new UIMessageBoxThanhCongWindow();
                }
                return this.mUIMessageBoxThanhCongWindow;
            }
        }
        
        public UIMessageBoxCustomWindow UIMessageBoxCustomWindow
        {
            get
            {
                if ((this.mUIMessageBoxCustomWindow == null))
                {
                    this.mUIMessageBoxCustomWindow = new UIMessageBoxCustomWindow();
                }
                return this.mUIMessageBoxCustomWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod_BanHangParams mRecordedMethod_BanHangParams;
        
        private AssertMethod_ThanhCongExpectedValues mAssertMethod_ThanhCongExpectedValues;
        
        private AssertMethod_NullSLExpectedValues mAssertMethod_NullSLExpectedValues;
        
        private RecordedMethod_NullTTParams mRecordedMethod_NullTTParams;
        
        private AssertMethod_NullTTExpectedValues mAssertMethod_NullTTExpectedValues;
        
        private AssertMethod_NullTienDuaExpectedValues mAssertMethod_NullTienDuaExpectedValues;
        
        private RecordedMethod1Params mRecordedMethod1Params;
        
        private UIBanHangGUIWindow mUIBanHangGUIWindow;
        
        private UIMessageBoxThanhCongWindow mUIMessageBoxThanhCongWindow;
        
        private UIMessageBoxCustomWindow mUIMessageBoxCustomWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_BanHang'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod_BanHangParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'SPNA05' in text box
        /// </summary>
        public string UIItemEditText = "SPNA05";
        
        /// <summary>
        /// Type '1' in text box
        /// </summary>
        public string UIItemEditText1 = "1";
        
        /// <summary>
        /// Type '300000' in text box
        /// </summary>
        public string UIItemEditText2 = "300000";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_ThanhCong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_ThanhCongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Thêm thành công.' label equals 'Thêm thành công.'
        /// </summary>
        public string UIThêmthànhcôngTextName = "Thêm thành công.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_NullSL'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_NullSLExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Mời bạn nhập dữ liệu.' label equals 'Mời bạn nhập dữ liệu.'
        /// </summary>
        public string UIMờibạnnhậpdữliệuTextName = "Mời bạn nhập dữ liệu.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_NullTT'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod_NullTTParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'SPNA03' in text box
        /// </summary>
        public string UIItemEditText = "SPNA03";
        
        /// <summary>
        /// Type '2' in text box
        /// </summary>
        public string UIItemEditText1 = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_NullTT'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_NullTTExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Mời bạn nhập dữ liệu.' label equals 'Mời bạn nhập dữ liệu.'
        /// </summary>
        public string UIMờibạnnhậpdữliệuTextName = "Mời bạn nhập dữ liệu.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_NullTienDua'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_NullTienDuaExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Bạn chưa nhập số tiền khách hàng đưa.' label equals 'Bạn chưa nhập số tiền khách hàng đưa.'
        /// </summary>
        public string UIBạnchưanhậpsốtiềnkháTextName = "Bạn chưa nhập số tiền khách hàng đưa.";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod1'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod1Params
    {
        
        #region Fields
        /// <summary>
        /// Type 'SPNA05' in text box
        /// </summary>
        public string UIItemEditText = "SPNA05";
        
        /// <summary>
        /// Type '2' in text box
        /// </summary>
        public string UIItemEditText1 = "2";
        
        /// <summary>
        /// Type '{CapsLock}' in text box
        /// </summary>
        public string UIItemEditSendKeys = "{CapsLock}";
        
        /// <summary>
        /// Type '600000' in text box
        /// </summary>
        public string UIItemEditText2 = "600000";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBanHangGUIWindow : WinWindow
    {
        
        public UIBanHangGUIWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "BanHangGUI";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UIItemWindow1 UIItemWindow1
        {
            get
            {
                if ((this.mUIItemWindow1 == null))
                {
                    this.mUIItemWindow1 = new UIItemWindow1(this);
                }
                return this.mUIItemWindow1;
            }
        }
        
        public UITHÊMWindow UITHÊMWindow
        {
            get
            {
                if ((this.mUITHÊMWindow == null))
                {
                    this.mUITHÊMWindow = new UITHÊMWindow(this);
                }
                return this.mUITHÊMWindow;
            }
        }
        
        public UIItemWindow2 UIItemWindow2
        {
            get
            {
                if ((this.mUIItemWindow2 == null))
                {
                    this.mUIItemWindow2 = new UIItemWindow2(this);
                }
                return this.mUIItemWindow2;
            }
        }
        
        public UITHANHTOÁNWindow UITHANHTOÁNWindow
        {
            get
            {
                if ((this.mUITHANHTOÁNWindow == null))
                {
                    this.mUITHANHTOÁNWindow = new UITHANHTOÁNWindow(this);
                }
                return this.mUITHANHTOÁNWindow;
            }
        }
        
        public UIThànhTiềnClient UIThànhTiềnClient
        {
            get
            {
                if ((this.mUIThànhTiềnClient == null))
                {
                    this.mUIThànhTiềnClient = new UIThànhTiềnClient(this);
                }
                return this.mUIThànhTiềnClient;
            }
        }
        
        public UITxtslWindow UITxtslWindow
        {
            get
            {
                if ((this.mUITxtslWindow == null))
                {
                    this.mUITxtslWindow = new UITxtslWindow(this);
                }
                return this.mUITxtslWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIItemWindow mUIItemWindow;
        
        private UIItemWindow1 mUIItemWindow1;
        
        private UITHÊMWindow mUITHÊMWindow;
        
        private UIItemWindow2 mUIItemWindow2;
        
        private UITHANHTOÁNWindow mUITHANHTOÁNWindow;
        
        private UIThànhTiềnClient mUIThànhTiềnClient;
        
        private UITxtslWindow mUITxtslWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "11";
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("BanHangGUI");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow1 : WinWindow
    {
        
        public UIItemWindow1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "9";
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("BanHangGUI");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITHÊMWindow : WinWindow
    {
        
        public UITHÊMWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnThem";
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public WinButton UITHÊMButton
        {
            get
            {
                if ((this.mUITHÊMButton == null))
                {
                    this.mUITHÊMButton = new WinButton(this);
                    #region Search Criteria
                    this.mUITHÊMButton.SearchProperties[WinButton.PropertyNames.Name] = "THÊM";
                    this.mUITHÊMButton.WindowTitles.Add("BanHangGUI");
                    #endregion
                }
                return this.mUITHÊMButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUITHÊMButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow2 : WinWindow
    {
        
        public UIItemWindow2(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "4";
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("BanHangGUI");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITHANHTOÁNWindow : WinWindow
    {
        
        public UITHANHTOÁNWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnThanhToan";
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public WinButton UITHANHTOÁNButton
        {
            get
            {
                if ((this.mUITHANHTOÁNButton == null))
                {
                    this.mUITHANHTOÁNButton = new WinButton(this);
                    #region Search Criteria
                    this.mUITHANHTOÁNButton.SearchProperties[WinButton.PropertyNames.Name] = "THANH TOÁN";
                    this.mUITHANHTOÁNButton.WindowTitles.Add("BanHangGUI");
                    #endregion
                }
                return this.mUITHANHTOÁNButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUITHANHTOÁNButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIThànhTiềnClient : WinClient
    {
        
        public UIThànhTiềnClient(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinControl.PropertyNames.Name] = "Thành Tiền";
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public WinWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new WinWindow(this);
                    #region Search Criteria
                    this.mUIItemWindow.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
                    this.mUIItemWindow.WindowTitles.Add("BanHangGUI");
                    #endregion
                }
                return this.mUIItemWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinWindow mUIItemWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITxtslWindow : WinWindow
    {
        
        public UITxtslWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtsl";
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public WinClient UITxtslClient
        {
            get
            {
                if ((this.mUITxtslClient == null))
                {
                    this.mUITxtslClient = new WinClient(this);
                    #region Search Criteria
                    this.mUITxtslClient.WindowTitles.Add("BanHangGUI");
                    #endregion
                }
                return this.mUITxtslClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUITxtslClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMessageBoxThanhCongWindow : WinWindow
    {
        
        public UIMessageBoxThanhCongWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MessageBoxThanhCong";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MessageBoxThanhCong");
            #endregion
        }
        
        #region Properties
        public UIThêmthànhcôngWindow UIThêmthànhcôngWindow
        {
            get
            {
                if ((this.mUIThêmthànhcôngWindow == null))
                {
                    this.mUIThêmthànhcôngWindow = new UIThêmthànhcôngWindow(this);
                }
                return this.mUIThêmthànhcôngWindow;
            }
        }
        
        public UIOKWindow UIOKWindow
        {
            get
            {
                if ((this.mUIOKWindow == null))
                {
                    this.mUIOKWindow = new UIOKWindow(this);
                }
                return this.mUIOKWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIThêmthànhcôngWindow mUIThêmthànhcôngWindow;
        
        private UIOKWindow mUIOKWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIThêmthànhcôngWindow : WinWindow
    {
        
        public UIThêmthànhcôngWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Test";
            this.WindowTitles.Add("MessageBoxThanhCong");
            #endregion
        }
        
        #region Properties
        public WinText UIThêmthànhcôngText
        {
            get
            {
                if ((this.mUIThêmthànhcôngText == null))
                {
                    this.mUIThêmthànhcôngText = new WinText(this);
                    #region Search Criteria
                    this.mUIThêmthànhcôngText.SearchProperties[WinText.PropertyNames.Name] = "Thêm thành công.";
                    this.mUIThêmthànhcôngText.WindowTitles.Add("MessageBoxThanhCong");
                    #endregion
                }
                return this.mUIThêmthànhcôngText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIThêmthànhcôngText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIOKWindow : WinWindow
    {
        
        public UIOKWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnOK";
            this.WindowTitles.Add("MessageBoxThanhCong");
            #endregion
        }
        
        #region Properties
        public WinButton UIOKButton
        {
            get
            {
                if ((this.mUIOKButton == null))
                {
                    this.mUIOKButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIOKButton.SearchProperties[WinButton.PropertyNames.Name] = "OK";
                    this.mUIOKButton.WindowTitles.Add("MessageBoxThanhCong");
                    #endregion
                }
                return this.mUIOKButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUIOKButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMessageBoxCustomWindow : WinWindow
    {
        
        public UIMessageBoxCustomWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MessageBoxCustom";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MessageBoxCustom");
            #endregion
        }
        
        #region Properties
        public UIMờibạnnhậpdữliệuWindow UIMờibạnnhậpdữliệuWindow
        {
            get
            {
                if ((this.mUIMờibạnnhậpdữliệuWindow == null))
                {
                    this.mUIMờibạnnhậpdữliệuWindow = new UIMờibạnnhậpdữliệuWindow(this);
                }
                return this.mUIMờibạnnhậpdữliệuWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIMờibạnnhậpdữliệuWindow mUIMờibạnnhậpdữliệuWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMờibạnnhậpdữliệuWindow : WinWindow
    {
        
        public UIMờibạnnhậpdữliệuWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Test";
            this.WindowTitles.Add("MessageBoxCustom");
            #endregion
        }
        
        #region Properties
        public WinText UIMờibạnnhậpdữliệuText
        {
            get
            {
                if ((this.mUIMờibạnnhậpdữliệuText == null))
                {
                    this.mUIMờibạnnhậpdữliệuText = new WinText(this);
                    #region Search Criteria
                    this.mUIMờibạnnhậpdữliệuText.SearchProperties[WinText.PropertyNames.Name] = "Mời bạn nhập dữ liệu.";
                    this.mUIMờibạnnhậpdữliệuText.WindowTitles.Add("MessageBoxCustom");
                    #endregion
                }
                return this.mUIMờibạnnhậpdữliệuText;
            }
        }
        
        public WinText UIBạnchưanhậpsốtiềnkháText
        {
            get
            {
                if ((this.mUIBạnchưanhậpsốtiềnkháText == null))
                {
                    this.mUIBạnchưanhậpsốtiềnkháText = new WinText(this);
                    #region Search Criteria
                    this.mUIBạnchưanhậpsốtiềnkháText.SearchProperties[WinText.PropertyNames.Name] = "Bạn chưa nhập số tiền khách hàng đưa.";
                    this.mUIBạnchưanhậpsốtiềnkháText.WindowTitles.Add("MessageBoxCustom");
                    #endregion
                }
                return this.mUIBạnchưanhậpsốtiềnkháText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIMờibạnnhậpdữliệuText;
        
        private WinText mUIBạnchưanhậpsốtiềnkháText;
        #endregion
    }
}
