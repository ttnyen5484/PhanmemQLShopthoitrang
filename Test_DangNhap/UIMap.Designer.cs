// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Test_DangNhap
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// Test_FormDangNhap - Use 'Test_FormDangNhapParams' to pass parameters into this method.
        /// </summary>
        public void Test_FormDangNhap()
        {
            #region Variable Declarations
            WinEdit uITxtTenDNEdit = this.UIĐĂNGNHẬPWindow.UIUsernameWindow.UITxtTenDNEdit;
            WinEdit uITxtMKEdit = this.UIĐĂNGNHẬPWindow.UIPasswordWindow.UITxtMKEdit;
            WinButton uIĐăngnhậpButton = this.UIĐĂNGNHẬPWindow.UILogInWindow.UIĐăngnhậpButton;
            #endregion

            // Type 'NV01' in 'txtTenDN' text box
            uITxtTenDNEdit.Text = this.Test_FormDangNhapParams.UITxtTenDNEditText;

            // Type 'Thanh123' in 'txtMK' text box
            uITxtMKEdit.Text = this.Test_FormDangNhapParams.UITxtMKEditText;

            // Click 'Đăng nhập' button
            Mouse.Click(uIĐăngnhậpButton, new Point(176, 10));
        }
        
        /// <summary>
        /// Asser_DNThanhCong - Use 'Asser_DNThanhCongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Asser_DNThanhCong()
        {
            #region Variable Declarations
            WinClient uIPanelContentClient = this.UIHomeWindow.UIPanelContentWindow.UIPanelContentClient;
            #endregion

            // Verify that the 'ControlName' property of 'panelContent' client equals 'panelContent'
            Assert.AreEqual(this.Asser_DNThanhCongExpectedValues.UIPanelContentClientControlName, uIPanelContentClient.ControlName);
        }
        
        /// <summary>
        /// AssertNullTT - Use 'AssertNullTTExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertNullTT()
        {
            #region Variable Declarations
            WinText uIKhôngđượcbỏtrốnguserText = this.UIMessageBoxCustomWindow.UIKhôngđượcbỏtrốnguserWindow.UIKhôngđượcbỏtrốnguserText;
            #endregion

            // Verify that the 'Name' property of 'Không được bỏ trống username' label equals 'Không được bỏ trống username'
            Assert.AreEqual(this.AssertNullTTExpectedValues.UIKhôngđượcbỏtrốnguserTextName, uIKhôngđượcbỏtrốnguserText.Name);
        }
        
        /// <summary>
        /// Assert_NullPass - Use 'Assert_NullPassExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Assert_NullPass()
        {
            #region Variable Declarations
            WinText uIKhôngđượcbỏtrốngpassText = this.UIMessageBoxCustomWindow.UIKhôngđượcbỏtrốnguserWindow.UIKhôngđượcbỏtrốngpassText;
            #endregion

            // Verify that the 'Name' property of 'Không được bỏ trống password' label equals 'Không được bỏ trống password'
            Assert.AreEqual(this.Assert_NullPassExpectedValues.UIKhôngđượcbỏtrốngpassTextName, uIKhôngđượcbỏtrốngpassText.Name);
        }
        
        /// <summary>
        /// Assert_SaiTT - Use 'Assert_SaiTTExpectedValues' to pass parameters into this method.
        /// </summary>
        public void Assert_SaiTT()
        {
            #region Variable Declarations
            WinText uISaiusernamehoặcpasswText = this.UIMessageBoxCustomWindow.UIKhôngđượcbỏtrốnguserWindow.UISaiusernamehoặcpasswText;
            #endregion

            // Verify that the 'Name' property of 'Sai username hoặc password' label equals 'Sai username hoặc password'
            Assert.AreEqual(this.Assert_SaiTTExpectedValues.UISaiusernamehoặcpasswTextName, uISaiusernamehoặcpasswText.Name);
        }
        
        /// <summary>
        /// AssertMethod_DNThanhCong - Use 'AssertMethod_DNThanhCongExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_DNThanhCong()
        {
            #region Variable Declarations
            WinText uIĐăngnhậpthànhcôngText = this.UIMessageBoxThanhCongWindow.UIĐăngnhậpthànhcôngWindow.UIĐăngnhậpthànhcôngText;
            #endregion

            // Verify that the 'Name' property of 'Đăng nhập thành công' label equals 'Đăng nhập thành công'
            Assert.AreEqual(this.AssertMethod_DNThanhCongExpectedValues.UIĐăngnhậpthànhcôngTextName, uIĐăngnhậpthànhcôngText.Name);
        }
        
        /// <summary>
        /// AssertMethod_DangNhap - Use 'AssertMethod_DangNhapExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_DangNhap()
        {
            #region Variable Declarations
            WinText uIĐăngnhậpthànhcôngText = this.UIMessageBoxThanhCongWindow.UIĐăngnhậpthànhcôngWindow.UIĐăngnhậpthànhcôngText;
            #endregion

            // Verify that the 'DisplayText' property of 'Đăng nhập thành công' label equals 'Đăng nhập thành công'
            Assert.AreEqual(this.AssertMethod_DangNhapExpectedValues.UIĐăngnhậpthànhcôngTextDisplayText, uIĐăngnhậpthànhcôngText.DisplayText);
        }
        
        #region Properties
        public virtual Test_FormDangNhapParams Test_FormDangNhapParams
        {
            get
            {
                if ((this.mTest_FormDangNhapParams == null))
                {
                    this.mTest_FormDangNhapParams = new Test_FormDangNhapParams();
                }
                return this.mTest_FormDangNhapParams;
            }
        }
        
        public virtual Asser_DNThanhCongExpectedValues Asser_DNThanhCongExpectedValues
        {
            get
            {
                if ((this.mAsser_DNThanhCongExpectedValues == null))
                {
                    this.mAsser_DNThanhCongExpectedValues = new Asser_DNThanhCongExpectedValues();
                }
                return this.mAsser_DNThanhCongExpectedValues;
            }
        }
        
        public virtual AssertNullTTExpectedValues AssertNullTTExpectedValues
        {
            get
            {
                if ((this.mAssertNullTTExpectedValues == null))
                {
                    this.mAssertNullTTExpectedValues = new AssertNullTTExpectedValues();
                }
                return this.mAssertNullTTExpectedValues;
            }
        }
        
        public virtual Assert_NullPassExpectedValues Assert_NullPassExpectedValues
        {
            get
            {
                if ((this.mAssert_NullPassExpectedValues == null))
                {
                    this.mAssert_NullPassExpectedValues = new Assert_NullPassExpectedValues();
                }
                return this.mAssert_NullPassExpectedValues;
            }
        }
        
        public virtual Assert_SaiTTExpectedValues Assert_SaiTTExpectedValues
        {
            get
            {
                if ((this.mAssert_SaiTTExpectedValues == null))
                {
                    this.mAssert_SaiTTExpectedValues = new Assert_SaiTTExpectedValues();
                }
                return this.mAssert_SaiTTExpectedValues;
            }
        }
        
        public virtual AssertMethod_DNThanhCongExpectedValues AssertMethod_DNThanhCongExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_DNThanhCongExpectedValues == null))
                {
                    this.mAssertMethod_DNThanhCongExpectedValues = new AssertMethod_DNThanhCongExpectedValues();
                }
                return this.mAssertMethod_DNThanhCongExpectedValues;
            }
        }
        
        public virtual AssertMethod_DangNhapExpectedValues AssertMethod_DangNhapExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_DangNhapExpectedValues == null))
                {
                    this.mAssertMethod_DangNhapExpectedValues = new AssertMethod_DangNhapExpectedValues();
                }
                return this.mAssertMethod_DangNhapExpectedValues;
            }
        }
        
        public UIĐĂNGNHẬPWindow UIĐĂNGNHẬPWindow
        {
            get
            {
                if ((this.mUIĐĂNGNHẬPWindow == null))
                {
                    this.mUIĐĂNGNHẬPWindow = new UIĐĂNGNHẬPWindow();
                }
                return this.mUIĐĂNGNHẬPWindow;
            }
        }
        
        public UIMessageBoxCustomWindow UIMessageBoxCustomWindow
        {
            get
            {
                if ((this.mUIMessageBoxCustomWindow == null))
                {
                    this.mUIMessageBoxCustomWindow = new UIMessageBoxCustomWindow();
                }
                return this.mUIMessageBoxCustomWindow;
            }
        }
        
        public UIHomeWindow UIHomeWindow
        {
            get
            {
                if ((this.mUIHomeWindow == null))
                {
                    this.mUIHomeWindow = new UIHomeWindow();
                }
                return this.mUIHomeWindow;
            }
        }
        
        public UIMessageBoxThanhCongWindow UIMessageBoxThanhCongWindow
        {
            get
            {
                if ((this.mUIMessageBoxThanhCongWindow == null))
                {
                    this.mUIMessageBoxThanhCongWindow = new UIMessageBoxThanhCongWindow();
                }
                return this.mUIMessageBoxThanhCongWindow;
            }
        }
        #endregion
        
        #region Fields
        private Test_FormDangNhapParams mTest_FormDangNhapParams;
        
        private Asser_DNThanhCongExpectedValues mAsser_DNThanhCongExpectedValues;
        
        private AssertNullTTExpectedValues mAssertNullTTExpectedValues;
        
        private Assert_NullPassExpectedValues mAssert_NullPassExpectedValues;
        
        private Assert_SaiTTExpectedValues mAssert_SaiTTExpectedValues;
        
        private AssertMethod_DNThanhCongExpectedValues mAssertMethod_DNThanhCongExpectedValues;
        
        private AssertMethod_DangNhapExpectedValues mAssertMethod_DangNhapExpectedValues;
        
        private UIĐĂNGNHẬPWindow mUIĐĂNGNHẬPWindow;
        
        private UIMessageBoxCustomWindow mUIMessageBoxCustomWindow;
        
        private UIHomeWindow mUIHomeWindow;
        
        private UIMessageBoxThanhCongWindow mUIMessageBoxThanhCongWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Test_FormDangNhap'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class Test_FormDangNhapParams
    {
        
        #region Fields
        /// <summary>
        /// Type 'NV01' in 'txtTenDN' text box
        /// </summary>
        public string UITxtTenDNEditText = "NV01";
        
        /// <summary>
        /// Type 'Thanh123' in 'txtMK' text box
        /// </summary>
        public string UITxtMKEditText = "Thanh123";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Asser_DNThanhCong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class Asser_DNThanhCongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'ControlName' property of 'panelContent' client equals 'panelContent'
        /// </summary>
        public string UIPanelContentClientControlName = "panelContent";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertNullTT'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertNullTTExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Không được bỏ trống username' label equals 'Không được bỏ trống username'
        /// </summary>
        public string UIKhôngđượcbỏtrốnguserTextName = "Không được bỏ trống username";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Assert_NullPass'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class Assert_NullPassExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Không được bỏ trống password' label equals 'Không được bỏ trống password'
        /// </summary>
        public string UIKhôngđượcbỏtrốngpassTextName = "Không được bỏ trống password";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'Assert_SaiTT'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class Assert_SaiTTExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Sai username hoặc password' label equals 'Sai username hoặc password'
        /// </summary>
        public string UISaiusernamehoặcpasswTextName = "Sai username hoặc password";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_DNThanhCong'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_DNThanhCongExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Đăng nhập thành công' label equals 'Đăng nhập thành công'
        /// </summary>
        public string UIĐăngnhậpthànhcôngTextName = "Đăng nhập thành công";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_DangNhap'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_DangNhapExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'DisplayText' property of 'Đăng nhập thành công' label equals 'Đăng nhập thành công'
        /// </summary>
        public string UIĐăngnhậpthànhcôngTextDisplayText = "Đăng nhập thành công";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIĐĂNGNHẬPWindow : WinWindow
    {
        
        public UIĐĂNGNHẬPWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "ĐĂNG NHẬP";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("ĐĂNG NHẬP");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtTenDNEdit
        {
            get
            {
                if ((this.mUITxtTenDNEdit == null))
                {
                    this.mUITxtTenDNEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTenDNEdit.WindowTitles.Add("ĐĂNG NHẬP");
                    #endregion
                }
                return this.mUITxtTenDNEdit;
            }
        }
        
        public WinEdit UITxtTenDNEdit1
        {
            get
            {
                if ((this.mUITxtTenDNEdit1 == null))
                {
                    this.mUITxtTenDNEdit1 = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTenDNEdit1.WindowTitles.Add("ĐĂNG NHẬP");
                    #endregion
                }
                return this.mUITxtTenDNEdit1;
            }
        }
        
        public WinEdit UITxtMKEdit
        {
            get
            {
                if ((this.mUITxtMKEdit == null))
                {
                    this.mUITxtMKEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtMKEdit.WindowTitles.Add("ĐĂNG NHẬP");
                    #endregion
                }
                return this.mUITxtMKEdit;
            }
        }
        
        public WinButton UILogInButton
        {
            get
            {
                if ((this.mUILogInButton == null))
                {
                    this.mUILogInButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILogInButton.SearchProperties[WinButton.PropertyNames.Name] = "Log In";
                    this.mUILogInButton.WindowTitles.Add("ĐĂNG NHẬP");
                    #endregion
                }
                return this.mUILogInButton;
            }
        }
        
        public UIUsernameWindow UIUsernameWindow
        {
            get
            {
                if ((this.mUIUsernameWindow == null))
                {
                    this.mUIUsernameWindow = new UIUsernameWindow(this);
                }
                return this.mUIUsernameWindow;
            }
        }
        
        public UIPasswordWindow UIPasswordWindow
        {
            get
            {
                if ((this.mUIPasswordWindow == null))
                {
                    this.mUIPasswordWindow = new UIPasswordWindow(this);
                }
                return this.mUIPasswordWindow;
            }
        }
        
        public UILogInWindow UILogInWindow
        {
            get
            {
                if ((this.mUILogInWindow == null))
                {
                    this.mUILogInWindow = new UILogInWindow(this);
                }
                return this.mUILogInWindow;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtTenDNEdit;
        
        private WinEdit mUITxtTenDNEdit1;
        
        private WinEdit mUITxtMKEdit;
        
        private WinButton mUILogInButton;
        
        private UIUsernameWindow mUIUsernameWindow;
        
        private UIPasswordWindow mUIPasswordWindow;
        
        private UILogInWindow mUILogInWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIUsernameWindow : WinWindow
    {
        
        public UIUsernameWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtTenDN";
            this.WindowTitles.Add("ĐĂNG NHẬP");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtTenDNEdit
        {
            get
            {
                if ((this.mUITxtTenDNEdit == null))
                {
                    this.mUITxtTenDNEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtTenDNEdit.WindowTitles.Add("ĐĂNG NHẬP");
                    #endregion
                }
                return this.mUITxtTenDNEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtTenDNEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPasswordWindow : WinWindow
    {
        
        public UIPasswordWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "txtMK";
            this.WindowTitles.Add("ĐĂNG NHẬP");
            #endregion
        }
        
        #region Properties
        public WinEdit UITxtMKEdit
        {
            get
            {
                if ((this.mUITxtMKEdit == null))
                {
                    this.mUITxtMKEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUITxtMKEdit.WindowTitles.Add("ĐĂNG NHẬP");
                    #endregion
                }
                return this.mUITxtMKEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUITxtMKEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UILogInWindow : WinWindow
    {
        
        public UILogInWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnDN";
            this.WindowTitles.Add("ĐĂNG NHẬP");
            #endregion
        }
        
        #region Properties
        public WinButton UILogInButton
        {
            get
            {
                if ((this.mUILogInButton == null))
                {
                    this.mUILogInButton = new WinButton(this);
                    #region Search Criteria
                    this.mUILogInButton.SearchProperties[WinButton.PropertyNames.Name] = "Log In";
                    this.mUILogInButton.WindowTitles.Add("ĐĂNG NHẬP");
                    #endregion
                }
                return this.mUILogInButton;
            }
        }
        
        public WinButton UIĐăngnhậpButton
        {
            get
            {
                if ((this.mUIĐăngnhậpButton == null))
                {
                    this.mUIĐăngnhậpButton = new WinButton(this);
                    #region Search Criteria
                    this.mUIĐăngnhậpButton.SearchProperties[WinButton.PropertyNames.Name] = "Đăng nhập";
                    this.mUIĐăngnhậpButton.WindowTitles.Add("ĐĂNG NHẬP");
                    #endregion
                }
                return this.mUIĐăngnhậpButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUILogInButton;
        
        private WinButton mUIĐăngnhậpButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMessageBoxCustomWindow : WinWindow
    {
        
        public UIMessageBoxCustomWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MessageBoxCustom";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MessageBoxCustom");
            #endregion
        }
        
        #region Properties
        public UIKhôngđượcbỏtrốnguserWindow UIKhôngđượcbỏtrốnguserWindow
        {
            get
            {
                if ((this.mUIKhôngđượcbỏtrốnguserWindow == null))
                {
                    this.mUIKhôngđượcbỏtrốnguserWindow = new UIKhôngđượcbỏtrốnguserWindow(this);
                }
                return this.mUIKhôngđượcbỏtrốnguserWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIKhôngđượcbỏtrốnguserWindow mUIKhôngđượcbỏtrốnguserWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIKhôngđượcbỏtrốnguserWindow : WinWindow
    {
        
        public UIKhôngđượcbỏtrốnguserWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Test";
            this.WindowTitles.Add("MessageBoxCustom");
            #endregion
        }
        
        #region Properties
        public WinText UIKhôngđượcbỏtrốnguserText
        {
            get
            {
                if ((this.mUIKhôngđượcbỏtrốnguserText == null))
                {
                    this.mUIKhôngđượcbỏtrốnguserText = new WinText(this);
                    #region Search Criteria
                    this.mUIKhôngđượcbỏtrốnguserText.SearchProperties[WinText.PropertyNames.Name] = "Không được bỏ trống username";
                    this.mUIKhôngđượcbỏtrốnguserText.WindowTitles.Add("MessageBoxCustom");
                    #endregion
                }
                return this.mUIKhôngđượcbỏtrốnguserText;
            }
        }
        
        public WinText UIKhôngđượcbỏtrốngpassText
        {
            get
            {
                if ((this.mUIKhôngđượcbỏtrốngpassText == null))
                {
                    this.mUIKhôngđượcbỏtrốngpassText = new WinText(this);
                    #region Search Criteria
                    this.mUIKhôngđượcbỏtrốngpassText.SearchProperties[WinText.PropertyNames.Name] = "Không được bỏ trống password";
                    this.mUIKhôngđượcbỏtrốngpassText.WindowTitles.Add("MessageBoxCustom");
                    #endregion
                }
                return this.mUIKhôngđượcbỏtrốngpassText;
            }
        }
        
        public WinText UISaiusernamehoặcpasswText
        {
            get
            {
                if ((this.mUISaiusernamehoặcpasswText == null))
                {
                    this.mUISaiusernamehoặcpasswText = new WinText(this);
                    #region Search Criteria
                    this.mUISaiusernamehoặcpasswText.SearchProperties[WinText.PropertyNames.Name] = "Sai username hoặc password";
                    this.mUISaiusernamehoặcpasswText.WindowTitles.Add("MessageBoxCustom");
                    #endregion
                }
                return this.mUISaiusernamehoặcpasswText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIKhôngđượcbỏtrốnguserText;
        
        private WinText mUIKhôngđượcbỏtrốngpassText;
        
        private WinText mUISaiusernamehoặcpasswText;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIHomeWindow : WinWindow
    {
        
        public UIHomeWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "Home";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("Home");
            #endregion
        }
        
        #region Properties
        public UIPanelContentWindow UIPanelContentWindow
        {
            get
            {
                if ((this.mUIPanelContentWindow == null))
                {
                    this.mUIPanelContentWindow = new UIPanelContentWindow(this);
                }
                return this.mUIPanelContentWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIPanelContentWindow mUIPanelContentWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIPanelContentWindow : WinWindow
    {
        
        public UIPanelContentWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "panelContent";
            this.WindowTitles.Add("Home");
            #endregion
        }
        
        #region Properties
        public WinClient UIPanelContentClient
        {
            get
            {
                if ((this.mUIPanelContentClient == null))
                {
                    this.mUIPanelContentClient = new WinClient(this);
                    #region Search Criteria
                    this.mUIPanelContentClient.WindowTitles.Add("Home");
                    #endregion
                }
                return this.mUIPanelContentClient;
            }
        }
        #endregion
        
        #region Fields
        private WinClient mUIPanelContentClient;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMessageBoxThanhCongWindow : WinWindow
    {
        
        public UIMessageBoxThanhCongWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MessageBoxThanhCong";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MessageBoxThanhCong");
            #endregion
        }
        
        #region Properties
        public UIĐăngnhậpthànhcôngWindow UIĐăngnhậpthànhcôngWindow
        {
            get
            {
                if ((this.mUIĐăngnhậpthànhcôngWindow == null))
                {
                    this.mUIĐăngnhậpthànhcôngWindow = new UIĐăngnhậpthànhcôngWindow(this);
                }
                return this.mUIĐăngnhậpthànhcôngWindow;
            }
        }
        #endregion
        
        #region Fields
        private UIĐăngnhậpthànhcôngWindow mUIĐăngnhậpthànhcôngWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIĐăngnhậpthànhcôngWindow : WinWindow
    {
        
        public UIĐăngnhậpthànhcôngWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Test";
            this.WindowTitles.Add("MessageBoxThanhCong");
            #endregion
        }
        
        #region Properties
        public WinText UIĐăngnhậpthànhcôngText
        {
            get
            {
                if ((this.mUIĐăngnhậpthànhcôngText == null))
                {
                    this.mUIĐăngnhậpthànhcôngText = new WinText(this);
                    #region Search Criteria
                    this.mUIĐăngnhậpthànhcôngText.SearchProperties[WinText.PropertyNames.Name] = "Đăng nhập thành công";
                    this.mUIĐăngnhậpthànhcôngText.WindowTitles.Add("MessageBoxThanhCong");
                    #endregion
                }
                return this.mUIĐăngnhậpthànhcôngText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUIĐăngnhậpthànhcôngText;
        #endregion
    }
}
