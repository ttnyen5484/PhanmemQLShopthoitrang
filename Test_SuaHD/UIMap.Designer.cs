// ------------------------------------------------------------------------------
//  <auto-generated>
//      This code was generated by coded UI test builder.
//      Version: 15.0.0.0
//
//      Changes to this file may cause incorrect behavior and will be lost if
//      the code is regenerated.
//  </auto-generated>
// ------------------------------------------------------------------------------

namespace Test_SuaHD
{
    using System;
    using System.CodeDom.Compiler;
    using System.Collections.Generic;
    using System.Drawing;
    using System.Text.RegularExpressions;
    using System.Windows.Input;
    using Microsoft.VisualStudio.TestTools.UITest.Extension;
    using Microsoft.VisualStudio.TestTools.UITesting;
    using Microsoft.VisualStudio.TestTools.UITesting.WinControls;
    using Microsoft.VisualStudio.TestTools.UnitTesting;
    using Keyboard = Microsoft.VisualStudio.TestTools.UITesting.Keyboard;
    using Mouse = Microsoft.VisualStudio.TestTools.UITesting.Mouse;
    using MouseButtons = System.Windows.Forms.MouseButtons;
    
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public partial class UIMap
    {
        
        /// <summary>
        /// RecordedMethod_SuaHD - Use 'RecordedMethod_SuaHDParams' to pass parameters into this method.
        /// </summary>
        public void RecordedMethod_SuaHD()
        {
            #region Variable Declarations
            WinTreeItem uIHD03058TreeItem = this.UIBanHangGUIWindow.UITreeView1Window.UIHD03058TreeItem;
            WinCell uISPNA03Cell = this.UIBanHangGUIWindow.UIDgvbanhangWindow.UIDataGridViewTable.UIRow0Row1.UISPNA03Cell;
            WinButton uISỬAButton = this.UIBanHangGUIWindow.UISỬAWindow.UISỬAButton;
            WinEdit uIItemEdit = this.UIBanHangGUIWindow.UIItemWindow.UIItemEdit;
            WinButton uICẬPNHẬTButton = this.UIBanHangGUIWindow.UICẬPNHẬTWindow.UICẬPNHẬTButton;
            #endregion

            // Click 'HD03058' tree item
            Mouse.Click(uIHD03058TreeItem, new Point(36, 17));

            // Click 'SPNA03' cell
            Mouse.Click(uISPNA03Cell, new Point(80, 21));

            // Click 'SỬA' button
            Mouse.Click(uISỬAButton, new Point(142, 50));

            // Type '2' in text box
            uIItemEdit.Text = this.RecordedMethod_SuaHDParams.UIItemEditText;

            // Click 'CẬP NHẬT' button
            Mouse.Click(uICẬPNHẬTButton, new Point(72, 46));
        }
        
        /// <summary>
        /// AssertMethod_SuaTC - Use 'AssertMethod_SuaTCExpectedValues' to pass parameters into this method.
        /// </summary>
        public void AssertMethod_SuaTC()
        {
            #region Variable Declarations
            WinText uISửathànhcôngText = this.UIMessageBoxThanhCongWindow.UISửathànhcôngWindow.UISửathànhcôngText;
            #endregion

            // Verify that the 'Name' property of 'Sửa thành công.' label equals 'Sửa thành công.'
            Assert.AreEqual(this.AssertMethod_SuaTCExpectedValues.UISửathànhcôngTextName, uISửathànhcôngText.Name);
        }
        
        #region Properties
        public virtual RecordedMethod_SuaHDParams RecordedMethod_SuaHDParams
        {
            get
            {
                if ((this.mRecordedMethod_SuaHDParams == null))
                {
                    this.mRecordedMethod_SuaHDParams = new RecordedMethod_SuaHDParams();
                }
                return this.mRecordedMethod_SuaHDParams;
            }
        }
        
        public virtual AssertMethod_SuaTCExpectedValues AssertMethod_SuaTCExpectedValues
        {
            get
            {
                if ((this.mAssertMethod_SuaTCExpectedValues == null))
                {
                    this.mAssertMethod_SuaTCExpectedValues = new AssertMethod_SuaTCExpectedValues();
                }
                return this.mAssertMethod_SuaTCExpectedValues;
            }
        }
        
        public UIBanHangGUIWindow UIBanHangGUIWindow
        {
            get
            {
                if ((this.mUIBanHangGUIWindow == null))
                {
                    this.mUIBanHangGUIWindow = new UIBanHangGUIWindow();
                }
                return this.mUIBanHangGUIWindow;
            }
        }
        
        public UIMessageBoxThanhCongWindow UIMessageBoxThanhCongWindow
        {
            get
            {
                if ((this.mUIMessageBoxThanhCongWindow == null))
                {
                    this.mUIMessageBoxThanhCongWindow = new UIMessageBoxThanhCongWindow();
                }
                return this.mUIMessageBoxThanhCongWindow;
            }
        }
        #endregion
        
        #region Fields
        private RecordedMethod_SuaHDParams mRecordedMethod_SuaHDParams;
        
        private AssertMethod_SuaTCExpectedValues mAssertMethod_SuaTCExpectedValues;
        
        private UIBanHangGUIWindow mUIBanHangGUIWindow;
        
        private UIMessageBoxThanhCongWindow mUIMessageBoxThanhCongWindow;
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'RecordedMethod_SuaHD'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class RecordedMethod_SuaHDParams
    {
        
        #region Fields
        /// <summary>
        /// Type '2' in text box
        /// </summary>
        public string UIItemEditText = "2";
        #endregion
    }
    
    /// <summary>
    /// Parameters to be passed into 'AssertMethod_SuaTC'
    /// </summary>
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class AssertMethod_SuaTCExpectedValues
    {
        
        #region Fields
        /// <summary>
        /// Verify that the 'Name' property of 'Sửa thành công.' label equals 'Sửa thành công.'
        /// </summary>
        public string UISửathànhcôngTextName = "Sửa thành công.";
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIBanHangGUIWindow : WinWindow
    {
        
        public UIBanHangGUIWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "BanHangGUI";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public UITreeView1Window UITreeView1Window
        {
            get
            {
                if ((this.mUITreeView1Window == null))
                {
                    this.mUITreeView1Window = new UITreeView1Window(this);
                }
                return this.mUITreeView1Window;
            }
        }
        
        public UIDgvbanhangWindow UIDgvbanhangWindow
        {
            get
            {
                if ((this.mUIDgvbanhangWindow == null))
                {
                    this.mUIDgvbanhangWindow = new UIDgvbanhangWindow(this);
                }
                return this.mUIDgvbanhangWindow;
            }
        }
        
        public UISỬAWindow UISỬAWindow
        {
            get
            {
                if ((this.mUISỬAWindow == null))
                {
                    this.mUISỬAWindow = new UISỬAWindow(this);
                }
                return this.mUISỬAWindow;
            }
        }
        
        public UIItemWindow UIItemWindow
        {
            get
            {
                if ((this.mUIItemWindow == null))
                {
                    this.mUIItemWindow = new UIItemWindow(this);
                }
                return this.mUIItemWindow;
            }
        }
        
        public UICẬPNHẬTWindow UICẬPNHẬTWindow
        {
            get
            {
                if ((this.mUICẬPNHẬTWindow == null))
                {
                    this.mUICẬPNHẬTWindow = new UICẬPNHẬTWindow(this);
                }
                return this.mUICẬPNHẬTWindow;
            }
        }
        #endregion
        
        #region Fields
        private UITreeView1Window mUITreeView1Window;
        
        private UIDgvbanhangWindow mUIDgvbanhangWindow;
        
        private UISỬAWindow mUISỬAWindow;
        
        private UIItemWindow mUIItemWindow;
        
        private UICẬPNHẬTWindow mUICẬPNHẬTWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UITreeView1Window : WinWindow
    {
        
        public UITreeView1Window(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "treeView1";
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public WinTreeItem UIHD03058TreeItem
        {
            get
            {
                if ((this.mUIHD03058TreeItem == null))
                {
                    this.mUIHD03058TreeItem = new WinTreeItem(this);
                    #region Search Criteria
                    this.mUIHD03058TreeItem.SearchProperties[WinTreeItem.PropertyNames.Name] = "HD03058";
                    this.mUIHD03058TreeItem.SearchProperties["Value"] = "0";
                    this.mUIHD03058TreeItem.WindowTitles.Add("BanHangGUI");
                    #endregion
                }
                return this.mUIHD03058TreeItem;
            }
        }
        #endregion
        
        #region Fields
        private WinTreeItem mUIHD03058TreeItem;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDgvbanhangWindow : WinWindow
    {
        
        public UIDgvbanhangWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "dgvbanhang";
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public UIDataGridViewTable UIDataGridViewTable
        {
            get
            {
                if ((this.mUIDataGridViewTable == null))
                {
                    this.mUIDataGridViewTable = new UIDataGridViewTable(this);
                }
                return this.mUIDataGridViewTable;
            }
        }
        #endregion
        
        #region Fields
        private UIDataGridViewTable mUIDataGridViewTable;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIDataGridViewTable : WinTable
    {
        
        public UIDataGridViewTable(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinTable.PropertyNames.Name] = "DataGridView";
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public UIRow0Row UIRow0Row
        {
            get
            {
                if ((this.mUIRow0Row == null))
                {
                    this.mUIRow0Row = new UIRow0Row(this);
                }
                return this.mUIRow0Row;
            }
        }
        
        public UIRow0Row1 UIRow0Row1
        {
            get
            {
                if ((this.mUIRow0Row1 == null))
                {
                    this.mUIRow0Row1 = new UIRow0Row1(this);
                }
                return this.mUIRow0Row1;
            }
        }
        #endregion
        
        #region Fields
        private UIRow0Row mUIRow0Row;
        
        private UIRow0Row1 mUIRow0Row1;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRow0Row : WinRow
    {
        
        public UIRow0Row(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Value] = "SPNA03    ;ÁO SOMI M1SMD2031001;1;250000;250000";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public WinCell UIItem1Cell
        {
            get
            {
                if ((this.mUIItem1Cell == null))
                {
                    this.mUIItem1Cell = new WinCell(this);
                    #region Search Criteria
                    this.mUIItem1Cell.SearchProperties[WinCell.PropertyNames.Value] = "1";
                    this.mUIItem1Cell.WindowTitles.Add("BanHangGUI");
                    #endregion
                }
                return this.mUIItem1Cell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUIItem1Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIRow0Row1 : WinRow
    {
        
        public UIRow0Row1(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinRow.PropertyNames.Value] = "SPNA03    ;ÁO SOMI M1SMD2031001;3;250000;750000";
            this.SearchConfigurations.Add(SearchConfiguration.AlwaysSearch);
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public WinCell UISPNA03Cell
        {
            get
            {
                if ((this.mUISPNA03Cell == null))
                {
                    this.mUISPNA03Cell = new WinCell(this);
                    #region Search Criteria
                    this.mUISPNA03Cell.SearchProperties[WinCell.PropertyNames.Value] = "SPNA03    ";
                    this.mUISPNA03Cell.WindowTitles.Add("BanHangGUI");
                    #endregion
                }
                return this.mUISPNA03Cell;
            }
        }
        #endregion
        
        #region Fields
        private WinCell mUISPNA03Cell;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISỬAWindow : WinWindow
    {
        
        public UISỬAWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnsua";
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public WinButton UISỬAButton
        {
            get
            {
                if ((this.mUISỬAButton == null))
                {
                    this.mUISỬAButton = new WinButton(this);
                    #region Search Criteria
                    this.mUISỬAButton.SearchProperties[WinButton.PropertyNames.Name] = "SỬA";
                    this.mUISỬAButton.WindowTitles.Add("BanHangGUI");
                    #endregion
                }
                return this.mUISỬAButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUISỬAButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIItemWindow : WinWindow
    {
        
        public UIItemWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.EDIT", PropertyExpressionOperator.Contains));
            this.SearchProperties[WinWindow.PropertyNames.Instance] = "9";
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public WinEdit UIItemEdit
        {
            get
            {
                if ((this.mUIItemEdit == null))
                {
                    this.mUIItemEdit = new WinEdit(this);
                    #region Search Criteria
                    this.mUIItemEdit.WindowTitles.Add("BanHangGUI");
                    #endregion
                }
                return this.mUIItemEdit;
            }
        }
        #endregion
        
        #region Fields
        private WinEdit mUIItemEdit;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UICẬPNHẬTWindow : WinWindow
    {
        
        public UICẬPNHẬTWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "btnLuu";
            this.WindowTitles.Add("BanHangGUI");
            #endregion
        }
        
        #region Properties
        public WinButton UICẬPNHẬTButton
        {
            get
            {
                if ((this.mUICẬPNHẬTButton == null))
                {
                    this.mUICẬPNHẬTButton = new WinButton(this);
                    #region Search Criteria
                    this.mUICẬPNHẬTButton.SearchProperties[WinButton.PropertyNames.Name] = "CẬP NHẬT";
                    this.mUICẬPNHẬTButton.WindowTitles.Add("BanHangGUI");
                    #endregion
                }
                return this.mUICẬPNHẬTButton;
            }
        }
        #endregion
        
        #region Fields
        private WinButton mUICẬPNHẬTButton;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UIMessageBoxThanhCongWindow : WinWindow
    {
        
        public UIMessageBoxThanhCongWindow()
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.Name] = "MessageBoxThanhCong";
            this.SearchProperties.Add(new PropertyExpression(WinWindow.PropertyNames.ClassName, "WindowsForms10.Window", PropertyExpressionOperator.Contains));
            this.WindowTitles.Add("MessageBoxThanhCong");
            #endregion
        }
        
        #region Properties
        public UISửathànhcôngWindow UISửathànhcôngWindow
        {
            get
            {
                if ((this.mUISửathànhcôngWindow == null))
                {
                    this.mUISửathànhcôngWindow = new UISửathànhcôngWindow(this);
                }
                return this.mUISửathànhcôngWindow;
            }
        }
        #endregion
        
        #region Fields
        private UISửathànhcôngWindow mUISửathànhcôngWindow;
        #endregion
    }
    
    [GeneratedCode("Coded UITest Builder", "15.0.26208.0")]
    public class UISửathànhcôngWindow : WinWindow
    {
        
        public UISửathànhcôngWindow(UITestControl searchLimitContainer) : 
                base(searchLimitContainer)
        {
            #region Search Criteria
            this.SearchProperties[WinWindow.PropertyNames.ControlName] = "Test";
            this.WindowTitles.Add("MessageBoxThanhCong");
            #endregion
        }
        
        #region Properties
        public WinText UISửathànhcôngText
        {
            get
            {
                if ((this.mUISửathànhcôngText == null))
                {
                    this.mUISửathànhcôngText = new WinText(this);
                    #region Search Criteria
                    this.mUISửathànhcôngText.SearchProperties[WinText.PropertyNames.Name] = "Sửa thành công.";
                    this.mUISửathànhcôngText.WindowTitles.Add("MessageBoxThanhCong");
                    #endregion
                }
                return this.mUISửathànhcôngText;
            }
        }
        #endregion
        
        #region Fields
        private WinText mUISửathànhcôngText;
        #endregion
    }
}
